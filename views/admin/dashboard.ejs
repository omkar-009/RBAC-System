<!DOCTYPE html>
<html lang="en" class="h-100">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'Admin Dashboard' %></title>
    
    
    <link rel="preconnect" href="https:fonts.googleapis.com">
    <link rel="preconnect" href="https:fonts.gstatic.com" crossorigin>
    <link href="https:fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    
    <link rel="stylesheet" href="https:cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    
    
    <script defer src="https:cdn.jsdelivr.net/npm/alpinejs@3.12.0/dist/cdn.min.js"></script>
    
    
    <style>
        :root {
            
            --primary: #4f46e5;
            --primary-hover: #4338ca;
            --secondary: #6b7280;
            --success: #10b981;
            --info: #3b82f6;
            --warning: #f59e0b;
            --danger: #ef4444;
            --light: #f9fafb;
            --dark: #111827;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-300: #d1d5db;
            --gray-400: #9ca3af;
            --gray-500: #6b7280;
            --gray-600: #4b5563;
            --gray-700: #374151;
            --gray-800: #1f2937;
            --gray-900: #111827;
            
            
            --font-sans: 'Inter', system-ui, -apple-system, 'Segoe UI', Roboto, sans-serif;
            --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace;
            
            
            --space-1: 0.25rem;
            --space-2: 0.5rem;
            --space-3: 0.75rem;
            --space-4: 1rem;
            --space-5: 1.25rem;
            --space-6: 1.5rem;
            --space-8: 2rem;
            --space-10: 2.5rem;
            
            
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
            --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
            
            
            --radius-sm: 0.25rem;
            --radius: 0.5rem;
            --radius-md: 0.75rem;
            --radius-lg: 1rem;
            
            
            --header-height: 4rem;
            --sidebar-width: 16rem;
            --content-padding: 1.5rem;
        }
        
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: var(--font-sans);
            color: var(--gray-800);
            background-color: #f9fafb;
            line-height: 1.5;
        }
        
        a {
            color: var(--primary);
            text-decoration: none;
            transition: color 0.2s;
        }
        
        a:hover {
            color: var(--primary-hover);
        }
        
        
        .app-container {
            display: grid;
            grid-template-columns: var(--sidebar-width) 1fr;
            grid-template-rows: auto 1fr;
            min-height: 100vh;
        }
        
        .sidebar {
            grid-row: 1 / -1;
            background: #1e293b;
            color: white;
            padding: 1.5rem 0;
            transition: all 0.3s ease;
            overflow-y: auto;
        }
        
        .sidebar.collapsed {
            transform: translateX(-100%);
        }
        
        .sidebar-header {
            padding: 0 1.5rem 1.5rem;
            border-bottom: 1px solid var(--gray-100);
            margin-bottom: 1.5rem;
        }
        
        .sidebar-brand {
            display: flex;
            align-items: center;
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--gray-900);
            text-decoration: none;
        }
        
        .sidebar-brand i {
            margin-right: 0.75rem;
            color: var(--primary);
            font-size: 1.5rem;
        }
        
        .nav-menu {
            flex: 1;
            overflow-y: auto;
            padding: 0 0.75rem;
        }
        
        .nav-group {
            margin-bottom: 1.5rem;
        }
        
        .nav-title {
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            color: var(--gray-500);
            padding: 0 1rem;
            margin-bottom: 0.75rem;
        }
        
        .nav-link {
            display: flex;
            align-items: center;
            padding: 0.625rem 1rem;
            color: var(--gray-600);
            text-decoration: none;
            border-radius: var(--radius);
            margin-bottom: 0.25rem;
            transition: var(--transition);
            font-weight: 500;
            font-size: 0.9375rem;
        }
        
        .nav-link i {
            width: 24px;
            margin-right: 0.75rem;
            font-size: 1.25rem;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--gray-400);
            transition: var(--transition);
        }
        
        .nav-link:hover {
            background-color: var(--gray-50);
            color: var(--primary);
        }
        
        .nav-link:hover i {
            color: var(--primary);
        }
        
        .nav-link.active {
            background-color: var(--primary-50);
            color: var(--primary-700);
            font-weight: 600;
        }
        
        .nav-link.active i {
            color: var(--primary);
        }
        
        .nav-badge {
            margin-left: auto;
            font-size: 0.75rem;
            font-weight: 500;
            padding: 0.125rem 0.5rem;
            border-radius: var(--radius-full);
            background-color: var(--primary-100);
            color: var(--primary-700);
        }
        
        .main-content {
            flex: 1;
            padding: 1rem;
            margin-left: 250px;
            transition: margin-left 0.3s ease;
            min-height: 100vh;
            background-color: #f3f4f6;
            width: calc(100% - 250px);
        }
        
        .main-content.expanded {
            margin-left: 0;
        }
        
        .topbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid var(--gray-200);
        }
        
        .topbar-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--gray-900);
            margin: 0;
        }
        
        .topbar-actions {
            display: flex;
            align-items: center;
            gap: 1rem;
        }
        
        .card {
            background: white;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-sm);
            border: 1px solid var(--gray-200);
            margin-bottom: 1.5rem;
            transition: var(--transition);
            overflow: hidden;
        }
        
        .card:hover {
            box-shadow: var(--shadow);
        }
        
        .card-header {
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--gray-100);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .card-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: var(--gray-900);
            margin: 0;
        }
        
        .card-body {
            padding: 1.5rem;
        }
        
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.5rem 1rem;
            border-radius: var(--radius);
            font-weight: 500;
            font-size: 0.875rem;
            line-height: 1.5;
            cursor: pointer;
            transition: var(--transition);
            border: 1px solid transparent;
            white-space: nowrap;
        }
        
        .btn i {
            margin-right: 0.5rem;
            font-size: 1rem;
        }
        
        .btn-sm {
            padding: 0.375rem 0.75rem;
            font-size: 0.8125rem;
        }
        
        .btn-primary {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }
        
        .btn-primary:hover {
            background-color: var(--primary-600);
            border-color: var(--primary-600);
        }
        
        .btn-outline {
            background-color: transparent;
            border: 1px solid var(--gray-300);
            color: var(--gray-700);
        }
        
        .btn-outline:hover {
            background-color: var(--gray-50);
            border-color: var(--gray-400);
        }
        
        .btn-icon {
            width: 2rem;
            height: 2rem;
            padding: 0;
            border-radius: 50%;
            background: transparent;
            border: 1px solid var(--gray-200);
            color: var(--gray-500);
        }
        
        .btn-icon:hover {
            background: var(--gray-100);
            color: var(--gray-700);
        }
        
        .badge {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.625rem;
            border-radius: var(--radius-full);
            font-size: 0.75rem;
            font-weight: 500;
            line-height: 1.25;
        }
        
        .badge-success {
            background-color: var(--success-100);
            color: var(--success-700);
        }
        
        .badge-warning {
            background-color: var(--warning-100);
            color: var(--warning-700);
        }
        
        .badge-danger {
            background-color: var(--danger-100);
            color: var(--danger-700);
        }
        
        .badge-info {
            background-color: var(--primary-100);
            color: var(--primary-700);
        }
        
        .status-badge {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.625rem;
            border-radius: var(--radius-full);
            font-size: 0.75rem;
            font-weight: 500;
        }
        
        .status-badge i {
            margin-right: 0.375rem;
            font-size: 0.625rem;
        }
        
        .status-active {
            background-color: var(--success-50);
            color: var(--success-700);
        }
        
        .status-inactive {
            background-color: var(--danger-50);
            color: var(--danger-700);
        }
        
        .status-pending {
            background-color: var(--warning-50);
            color: var(--warning-700);
        }
        
        .user-avatar {
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid white;
            box-shadow: var(--shadow-sm);
        }
        
        .user-avatar-sm {
            width: 2rem;
            height: 2rem;
        }
        
        .user-avatar-lg {
            width: 3rem;
            height: 3rem;
        }
        
        .table-container {
            width: 100%;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
            border-radius: var(--radius);
            border: 1px solid var(--gray-200);
            background: white;
            box-shadow: var(--shadow-sm);
        }
        
        .table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            min-width: 800px;
        }
        
        .table th {
            background-color: var(--gray-50);
            color: var(--gray-600);
            font-weight: 600;
            text-align: left;
            padding: 1rem 1.25rem;
            white-space: nowrap;
            border-bottom: 1px solid var(--gray-200);
            font-size: 0.8125rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }
        
        .table th:first-child {
            border-top-left-radius: var(--radius);
        }
        
        .table th:last-child {
            border-top-right-radius: var(--radius);
        }
        
        .table td {
            padding: 1rem 1.25rem;
            border-bottom: 1px solid var(--gray-100);
            vertical-align: middle;
            font-size: 0.9375rem;
            color: var(--gray-700);
        }
        
        .table tbody tr:last-child td {
            border-bottom: none;
        }
        
        .table tbody tr:hover {
            background-color: var(--gray-50);
        }
        
        .table tbody tr:last-child td:first-child {
            border-bottom-left-radius: var(--radius);
        }
        
        .table tbody tr:last-child td:last-child {
            border-bottom-right-radius: var(--radius);
        }
        
        .table-actions {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            justify-content: flex-end;
        }
        
        .table-avatar {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .table-avatar-info {
            display: flex;
            flex-direction: column;
        }
        
        .table-avatar-name {
            font-weight: 600;
            color: var(--gray-900);
            margin-bottom: 0.125rem;
        }
        
        .table-avatar-email {
            font-size: 0.8125rem;
            color: var(--gray-500);
        }
        
        @media (max-width: 1024px) {
            .table th, 
            .table td {
                padding: 0.75rem 1rem;
            }
        }
        
        .form-group {
            margin-bottom: 1.25rem;
        }
        
        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: var(--gray-700);
            font-size: 0.875rem;
        }
        
        .form-control {
            display: block;
            width: 100%;
            padding: 0.5rem 0.875rem;
            font-size: 0.9375rem;
            font-weight: 400;
            line-height: 1.5;
            color: var(--gray-900);
            background-color: white;
            background-clip: padding-box;
            border: 1px solid var(--gray-300);
            appearance: none;
            border-radius: var(--radius);
            transition: var(--transition);
        }
        
        .form-control:focus {
            color: var(--gray-900);
            background-color: white;
            border-color: var(--primary-300);
            outline: 0;
            box-shadow: 0 0 0 3px var(--primary-100);
        }
        
        .form-select {
            display: block;
            width: 100%;
            padding: 0.5rem 2.25rem 0.5rem 0.875rem;
            font-size: 0.9375rem;
            font-weight: 400;
            line-height: 1.5;
            color: var(--gray-900);
            background-color: white;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http:www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%234b5563' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 0.75rem center;
            background-size: 16px 12px;
            border: 1px solid var(--gray-300);
            border-radius: var(--radius);
            transition: var(--transition);
            appearance: none;
        }
        
        .form-select:focus {
            border-color: var(--primary-300);
            outline: 0;
            box-shadow: 0 0 0 3px var(--primary-100);
        }
        
        .form-check {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.5rem;
        }
        
        .form-check-input {
            width: 1rem;
            height: 1rem;
            margin-top: 0.125rem;
            border: 1px solid var(--gray-300);
            border-radius: 0.25rem;
            appearance: none;
            background-color: white;
            background-repeat: no-repeat;
            background-position: center;
            background-size: 100% 100%;
            transition: var(--transition);
        }
        
        .form-check-input:checked {
            background-color: var(--primary);
            border-color: var(--primary);
            background-image: url("data:image/svg+xml,%3csvg xmlns='http:www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e");
        }
        
        .form-check-input:focus {
            border-color: var(--primary-300);
            box-shadow: 0 0 0 3px var(--primary-100);
            outline: none;
        }
        
        .form-check-label {
            font-size: 0.9375rem;
            color: var(--gray-700);
            cursor: pointer;
        }
        
        .form-file {
            position: relative;
            display: inline-block;
            width: 100%;
            margin-bottom: 1rem;
        }
        
        .form-file-input {
            position: relative;
            z-index: 2;
            width: 100%;
            height: calc(2.5rem + 2px);
            margin: 0;
            opacity: 0;
        }
        
        .form-file-label {
            position: absolute;
            top: 0;
            right: 0;
            left: 0;
            z-index: 1;
            display: flex;
            height: 2.5rem;
            padding: 0.5rem 0.875rem;
            font-size: 0.9375rem;
            font-weight: 400;
            line-height: 1.5;
            color: var(--gray-700);
            background-color: white;
            border: 1px solid var(--gray-300);
            border-radius: var(--radius);
            align-items: center;
            cursor: pointer;
        }
        
        .form-file-button {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0 1rem;
            height: 100%;
            font-weight: 500;
            color: var(--primary);
            background-color: var(--primary-50);
            border-radius: 0.25rem;
            margin-left: auto;
            white-space: nowrap;
        }
        
        .form-file-text {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .is-invalid {
            border-color: var(--danger-300) !important;
        }
        
        .invalid-feedback {
            display: none;
            width: 100%;
            margin-top: 0.25rem;
            font-size: 0.8125rem;
            color: var(--danger-600);
        }
        
        .is-invalid ~ .invalid-feedback {
            display: block;
        }
        
        .text-muted {
            color: var(--gray-500) !important;
        }
        
        .text-success {
            color: var(--success) !important;
        }
        
        .text-danger {
            color: var(--danger) !important;
        }
        
        .text-warning {
            color: var(--warning) !important;
        }
        
        .text-info {
            color: var(--primary) !important;
        }
        
        .bg-light {
            background-color: var(--gray-50) !important;
        }
        
        .w-100 {
            width: 100% !important;
        }
        
        .mb-0 {
            margin-bottom: 0 !important;
        }
        
        .mt-1 {
            margin-top: 0.25rem !important;
        }
        
        .mt-2 {
            margin-top: 0.5rem !important;
        }
        
        .mt-3 {
            margin-top: 1rem !important;
        }
        
        .mt-4 {
            margin-top: 1.5rem !important;
        }
        
        .mb-1 {
            margin-bottom: 0.25rem !important;
        }
        
        .mb-2 {
            margin-bottom: 0.5rem !important;
        }
        
        .mb-3 {
            margin-bottom: 1rem !important;
        }
        
        .mb-4 {
            margin-bottom: 1.5rem !important;
        }
        
        .d-flex {
            display: flex !important;
        }
        
        .align-items-center {
            align-items: center !important;
        }
        
        .justify-content-between {
            justify-content: space-between !important;
        }
        
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition-slow);
        }
        
        .modal.show {
            opacity: 1;
            visibility: visible;
        }
        
        .modal-dialog {
            width: 100%;
            max-width: 500px;
            margin: 1rem;
            background: white;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-xl);
            transform: translateY(20px);
            transition: var(--transition-slow);
        }
        
        .modal.show .modal-dialog {
            transform: translateY(0);
        }
        
        .modal-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--gray-200);
        }
        
        .modal-title {
            margin: 0;
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--gray-900);
        }
        
        .modal-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            color: var(--gray-500);
            cursor: pointer;
            padding: 0.25rem;
            line-height: 1;
            transition: var(--transition);
        }
        
        .modal-close:hover {
            color: var(--gray-700);
        }
        
        .modal-body {
            padding: 1.5rem;
            max-height: 70vh;
            overflow-y: auto;
        }
        
        .modal-footer {
            display: flex;
            align-items: center;
            justify-content: flex-end;
            padding: 1rem 1.5rem;
            border-top: 1px solid var(--gray-200);
            gap: 0.75rem;
        }
        
        .alert {
            position: fixed;
            top: 1.5rem;
            right: 1.5rem;
            z-index: 1100;
            display: flex;
            align-items: center;
            padding: 1rem 1.25rem;
            border-radius: var(--radius);
            box-shadow: var(--shadow-md);
            max-width: 400px;
            transform: translateX(120%);
            transition: transform 0.3s ease-in-out;
            pointer-events: none;
        }
        
        .alert.show {
            transform: translateX(0);
            pointer-events: auto;
        }
        
        .alert-icon {
            font-size: 1.25rem;
            margin-right: 0.75rem;
            flex-shrink: 0;
        }
        
        .alert-content {
            flex: 1;
            min-width: 0;
        }
        
        .alert-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
            font-size: 0.9375rem;
        }
        
        .alert-message {
            font-size: 0.875rem;
            color: var(--gray-700);
            margin: 0;
        }
        
        .alert-close {
            background: none;
            border: none;
            color: inherit;
            font-size: 1.125rem;
            margin-left: 0.75rem;
            padding: 0.25rem;
            cursor: pointer;
            opacity: 0.7;
            transition: var(--transition);
            flex-shrink: 0;
            line-height: 1;
        }
        
        .alert-close:hover {
            opacity: 1;
        }
        
        .alert-success {
            background-color: var(--success-50);
            border-left: 4px solid var(--success-500);
            color: var(--success-800);
        }
        
        .alert-error {
            background-color: var(--danger-50);
            border-left: 4px solid var(--danger-500);
            color: var(--danger-700);
        }
        
        .toggle-checkbox:checked {
            right: 0;
            transform: translateX(calc(100% - 0.5rem));
            border-color: #10B981;
        }
        
        .toggle-checkbox:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.2);
        }
        
        .toggle-checkbox {
            right: 1.5rem;
            top: 0.25rem;
        }
        
        .toggle-checkbox:checked + .toggle-label {
            background-color: #10B981;
        }
        
        .sidebar {
            transition: all 0.3s ease;
            width: 250px;
            position: fixed;
            top: 0;
            left: 0;
            bottom: 0;
            z-index: 40;
            height: 100vh;
            overflow-y: auto;
            background-color: #ffffff;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        
        .sidebar.collapsed {
            width: 70px;
        }
        
        .sidebar.collapsed + .main-content {
            margin-left: 70px;
        }
        
        .sidebar.collapsed .nav-text,
        .sidebar.collapsed .nav-title,
        .sidebar.collapsed .user-info {
            display: none;
        }
        
        .nav-menu {
            display: flex;
            flex-direction: column;
            height: 100%;
            padding: 1rem 0;
        }
        
        .nav-group {
            margin-bottom: 1.5rem;
        }
        
        .nav-title {
            padding: 0.5rem 1.5rem;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            color: #6b7280;
        }
        
        .nav-link {
            display: flex;
            align-items: center;
            padding: 0.75rem 1.5rem;
            color: #4b5563;
            text-decoration: none;
            transition: all 0.2s ease;
            border-left: 3px solid transparent;
        }
        
        .nav-link:hover {
            background-color: #f3f4f6;
            color: #111827;
        }
        
        .nav-link.active {
            background-color: #eef2ff;
            color: #4f46e5;
            border-left-color: #4f46e5;
            font-weight: 500;
        }
        
        .nav-link i {
            margin-right: 0.75rem;
            font-size: 1.25rem;
            width: 24px;
            text-align: center;
        }
        
        .nav-link .bi-chevron-down {
            margin-left: auto;
            transition: transform 0.2s ease;
        }
        
        .nav-link[aria-expanded="true"] .bi-chevron-down {
            transform: rotate(180deg);
        }
        
        .submenu {
            padding-left: 2.5rem;
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }
        
        .submenu.active {
            max-height: 500px;
        }
        
        .submenu .nav-link {
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
            border-left: none;
        }
        
        .user-profile {
            margin-top: auto;
            padding: 1rem;
            border-top: 1px solid #e5e7eb;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            background-color: var(--avatar-bg, #e5e7eb);
        }
        
        .alert-warning {
            background-color: var(--warning-50);
            border-left: 4px solid var(--warning-500);
            color: var(--warning-800);
        }
        
        .alert-info {
            background-color: var(--primary-50);
            border-left: 4px solid var(--primary-500);
            color: var(--primary-800);
        }
        
        .spinner {
            display: inline-block;
            width: 1.5rem;
            height: 1.5rem;
            border: 0.2em solid currentColor;
            border-right-color: transparent;
            border-radius: 50%;
            animation: spinner-rotate 0.75s linear infinite;
        }
        
        @keyframes spinner-rotate {
            to {
                transform: rotate(360deg);
            }
        }
        
        @media (max-width: 640px) {
            .main-content {
                padding: 1rem;
            }
            
            .modal-dialog {
                margin: 0.5rem;
            }
            
            .alert {
                left: 1rem;
                right: 1rem;
                max-width: none;
            }
        }
    </style>
</head>
<body class="bg-gray-50">
    <div class="flex min-h-screen bg-gray-50">
        
        <aside class="sidebar bg-white border-r border-gray-200 flex-col shadow-sm" :class="{ 'collapsed': isSidebarCollapsed }">
            
            <div class="sidebar-header p-4 border-b border-gray-200">
                <a href="/admin/dashboard" class="flex items-center text-gray-800 no-underline">
                    <i class="bi bi-shield-lock text-2xl text-indigo-600"></i>
                    <span class="ml-3 text-xl font-semibold whitespace-nowrap" x-show="!isSidebarCollapsed">RBAC Admin</span>
                </a>
            </div>
            
            
            <nav class="nav-menu flex-1 overflow-y-auto">
                
                <div class="nav-group">
                    <div class="nav-title">MAIN</div>
                    <a href="/admin/dashboard" class="nav-link active">
                        <i class="bi bi-speedometer2"></i>
                        <span class="nav-text">Dashboard</span>
                    </a>
                </div>
                
                <div class="nav-group">
                    <div class="nav-title">MANAGEMENT</div>
                    
                    <div>
                        <a href="#users-submenu" class="nav-link" data-bs-toggle="collapse" role="button" aria-expanded="false" aria-controls="users-submenu">
                            <i class="bi bi-people"></i>
                            <span class="nav-text">Users</span>
                            <i class="bi bi-chevron-down ml-auto"></i>
                        </a>
                        <div class="submenu collapse" id="users-submenu">
                            <a href="/admin/users" class="nav-link">All Users</a>
                            <a href="/admin/users/new" class="nav-link">Add New User</a>
                            <a href="/admin/users/roles" class="nav-link">User Roles</a>
                        </div>
                    </div>
                    
                    <div>
                        <a href="#roles-submenu" class="nav-link" data-bs-toggle="collapse" role="button" aria-expanded="false" aria-controls="roles-submenu">
                            <i class="bi bi-shield-lock"></i>
                            <span class="nav-text">Roles & Permissions</span>
                            <i class="bi bi-chevron-down ml-auto"></i>
                        </a>
                        <div class="submenu collapse" id="roles-submenu">
                            <a href="/admin/roles" class="nav-link">All Roles</a>
                            <a href="/admin/roles/new" class="nav-link">Create Role</a>
                            <a href="/admin/permissions" class="nav-link">Permissions</a>
                        </div>
                    </div>
                </div>
                
                <div class="nav-group">
                    <div class="nav-title">SYSTEM</div>
                    
                    <div>
                        <a href="#settings-submenu" class="nav-link" data-bs-toggle="collapse" role="button" aria-expanded="false" aria-controls="settings-submenu">
                            <i class="bi bi-gear"></i>
                            <span class="nav-text">Settings</span>
                            <i class="bi bi-chevron-down ml-auto"></i>
                        </a>
                        <div class="submenu collapse" id="settings-submenu">
                            <a href="/admin/settings/general" class="nav-link">General</a>
                            <a href="/admin/settings/security" class="nav-link">Security</a>
                            <a href="/admin/settings/email" class="nav-link">Email</a>
                        </div>
                    </div>
                    
                    <a href="/admin/logs" class="nav-link">
                        <i class="bi bi-journal-text"></i>
                        <span class="nav-text">System Logs</span>
                    </a>
                </div>
            </nav>
            
            <div class="user-profile">
                <div class="flex items-center">
                    <img class="user-avatar" src="<%= user.photo ? '/uploads/' + user.photo : '/img/default-avatar.png' %>" alt="<%= user.name %>">
                    <div class="user-info ml-3" x-show="!isSidebarCollapsed">
                        <p class="text-sm font-medium text-gray-900 mb-0"><%= user.name %></p>
                        <p class="text-xs text-gray-500">Administrator</p>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="main-content">
            <header class="bg-white border-b border-gray-200 sticky top-0 z-10">
                <div class="flex items-center justify-between px-4 py-3 sm:px-6">
                    <div class="flex items-center">
                        <button @click="isSidebarCollapsed = !isSidebarCollapsed" class="p-2 mr-2 text-gray-500 rounded-md hover:bg-gray-100 focus:outline-none">
                            <i class="bi bi-list text-xl"></i>
                        </button>
                        <h1 class="text-xl font-semibold text-gray-800">User Management</h1>
                    </div>
                    
                    <div class="flex items-center space-x-4">
                        <div class="relative w-64">
                            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                                <i class="bi bi-search text-gray-400"></i>
                            </div>
                            <input 
                                type="text" 
                                class="block w-full py-2 pl-10 pr-3 text-sm bg-gray-100 border border-transparent rounded-md focus:ring-2 focus:ring-indigo-500 focus:bg-white focus:border-transparent" 
                                placeholder="Search users..."
                                x-model="searchQuery"
                                @input="filterUsers()"
                            >
                        </div>
                        
                        <div class="relative">
                            <button @click="isProfileMenuOpen = !isProfileMenuOpen" class="flex items-center text-sm rounded-full focus:outline-none">
                                <img class="w-8 h-8 rounded-full" src="<%= user.photo ? '/uploads/' + user.photo : '/img/default-avatar.png' %>" alt="<%= user.name %>">
                                <span class="ml-2 text-sm font-medium text-gray-700 hidden md:inline"><%= user.name %></span>
                            </button>
                            
                            <div x-show="isProfileMenuOpen" 
                                 @click.away="isProfileMenuOpen = false" 
                                 class="absolute right-0 w-48 py-1 mt-2 origin-top-right bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" 
                                 role="menu" 
                                 x-transition:enter="transition ease-out duration-100"
                                 x-transition:enter-start="transform opacity-0 scale-95"
                                 x-transition:enter-end="transform opacity-100 scale-100"
                                 x-transition:leave="transition ease-in duration-75"
                                 x-transition:leave-start="transform opacity-100 scale-100"
                                 x-transition:leave-end="transform opacity-0 scale-95">
                                <a href="/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem">
                                    <i class="bi bi-person mr-2"></i>Your Profile
                                </a>
                                <a href="/settings" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem">
                                    <i class="bi bi-gear mr-2"></i>Settings
                                </a>
                                <div class="border-t border-gray-100"></div>
                                <a href="/logout" class="nav-link logout" style="margin-top:auto;">
    <i class="bi bi-box-arrow-right"></i> Logout
</a>
                            </div>
                        </div>
                    </div>
                </div>
            </header>    
            <button 
                @click="isSidebarCollapsed = !isSidebarCollapsed"
                class="absolute -right-3 top-6 w-6 h-12 bg-white rounded-r-lg border border-l-0 border-gray-200 flex items-center justify-center shadow-sm hover:bg-gray-50 transition-colors duration-200"
                :class="{ 'transform rotate-180': isSidebarCollapsed }"
                aria-label="Toggle sidebar"
            >
                <i class="bi bi-chevron-left text-gray-500"></i>
            </button>
        </aside>
        
        <main class="main-content" :class="{ 'expanded': isSidebarCollapsed }">
            <div class="px-6 py-4 bg-white border-b border-gray-200">
                <div class="flex flex-col justify-between space-y-4 sm:flex-row sm:items-center sm:space-y-0">
                    <div>
                        <h1 class="text-2xl font-semibold text-gray-900">Dashboard</h1>
                        <p class="mt-1 text-sm text-gray-500">Welcome back, <%= user.name %>! Here's what's happening.</p>
                    </div>
                    <div class="flex flex-col space-y-3 sm:flex-row sm:space-y-0 sm:space-x-4">
                        <div class="relative">
                            <input 
                                type="text" 
                                class="w-full px-4 py-2 pl-10 text-sm border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500" 
                                placeholder="Search users..."
                                x-model="searchQuery"
                                @input="searchUsers"
                            >
                            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                                <i class="text-gray-400 bi bi-search"></i>
                            </div>
                        </div>
                        <button 
                            class="inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                            @click="openCreateUserModal"
                        >
                            <i class="mr-2 bi bi-plus-lg"></i> Add User
                        </button>
                    </div>
                </div>
            </div>
                
            <div class="px-6 pb-6">
                <div class="bg-white rounded-lg shadow overflow-hidden">
                    <div class="px-6 py-4 border-b border-gray-200 flex flex-col sm:flex-row justify-between items-start sm:items-center">
                        <div class="mb-4 sm:mb-0">
                            <h2 class="text-lg font-semibold text-gray-900">Users</h2>
                            <p class="mt-1 text-sm text-gray-500">A list of all the users in your account including their name, email and role.</p>
                        </div>
                        <div class="flex-shrink-0">
                            <button @click="showAddUserModal()" x-data="userManagement" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                                <i class="bi bi-plus-lg mr-2"></i> Add User
                            </button>
                        </div>
                    </div>
                    
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Active</th>
                                    <th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                <% users.forEach(user => { %>
                                <tr class="hover:bg-gray-50 transition-colors duration-150 cursor-pointer user-row" data-user-id="<%= user.id %>">
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div class="flex-shrink-0 h-10 w-10 relative">
                                                <% 
                                                    const initials = user.name ? user.name.split(' ').map(n => n[0]).join('').toUpperCase() : '';
                                                    const bgColors = ['bg-blue-500', 'bg-green-500', 'bg-purple-500', 'bg-pink-500', 'bg-indigo-500'];
                                                    const bgColor = bgColors[initials.charCodeAt(0) % bgColors.length];
                                                %>
                                                <div class="h-10 w-10 rounded-full flex items-center justify-center text-white font-medium text-sm <%= bgColor %> user-initials">
                                                    <%= initials %>
                                                </div>
                                            <div class="ml-4">
                                                <button @click="viewUser(<%= JSON.stringify({ id: user.id, name: user.name }) %>)" 
                                                        class="text-sm font-medium text-gray-900 hover:text-indigo-600 hover:underline focus:outline-none">
                                                    <%= user.name %>
                                                </button>
                                                <div class="text-sm text-gray-500"><%= user.email %></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                            <%= user.role_name === 'admin' ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800' %>">
                                            <%= user.role_name %>
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap" x-data="{ isActive: <%= user.is_active %> }" x-init="$watch('isActive', value => toggleUserStatus('<%= user.id %>', value))">
                                        <div class="flex items-center">
                                            <div class="relative inline-block w-12 mr-2 align-middle select-none">
                                                <input type="checkbox" 
                                                       x-model="isActive"
                                                       class="toggle-checkbox absolute block w-6 h-6 rounded-full bg-white border-2 border-gray-300 appearance-none cursor-pointer transition-transform duration-200 ease-in-out">
                                                <label :class="{'bg-green-500': isActive, 'bg-gray-300': !isActive}" 
                                                       class="toggle-label block overflow-hidden h-6 rounded-full cursor-pointer transition-colors duration-200 ease-in-out"></label>
                                            </div>
                                            <span class="text-sm text-gray-600" x-text="isActive ? 'Active' : 'Inactive'"></span>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium" x-data="userManagement">
                                        <div class="flex items-center justify-end space-x-2">
                                             View Button 
                                            <button class="p-1.5 text-gray-500 hover:text-blue-600 rounded-full hover:bg-blue-50 transition-colors duration-200" 
                                                    @click="viewUser({
                                                        id: '<%= user.id %>',
                                                        name: '<%= user.name %>',
                                                        email: '<%= user.email %>',
                                                        role: '<%= user.role_name %>',
                                                        created: '<%= new Date(user.created_at).toLocaleDateString() %>',
                                                        status: '<%= user.is_active ? 'Active' : 'Inactive' %>'
                                                    })"
                                                    title="View User">
                                                <i class="bi bi-eye-fill"></i>
                                            </button>
                                            
                                            <% if (user.role_name === 'admin') { %>
                                             Edit Button (Only for Admin) 
                                            <button class="p-1.5 text-gray-500 hover:text-yellow-600 rounded-full hover:bg-yellow-50 transition-colors duration-200 edit-user" 
                                                    data-user-id="<%= user.id %>"
                                                    @click.stop="handleEditUser('<%= user.id %>')"
                                                    title="Edit User">
                                                <i class="bi bi-pencil-fill"></i>
                                            </button>
                                            
                                             Delete Button (Only for Admin) 
                                            <button class="p-1.5 text-gray-500 hover:text-red-600 rounded-full hover:bg-red-50 transition-colors duration-200" 
                                                    @click.stop="confirmDelete('<%= user.id %>', '<%= user.name %>')"
                                                    title="Delete User">
                                                <i class="bi bi-trash-fill"></i>
                                            </button>
                                            <% } %>
                                        </div>
                                    </td>
                                </tr>
                                <% }) %>
                                <% if (users.length === 0) { %>
                                <tr>
                                    <td colspan="7" class="text-center py-4">
                                        <i class="bi bi-people display-4 d-block text-muted mb-2"></i>
                                        No users found. <button class="btn btn-link p-0" data-bs-toggle="modal" data-bs-target="#userModal">Add a new user</button> to get started.
                                    </td>
                                </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            
             User Profile Modal 
            <div class="modal fade" id="userModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content" x-data="userManagement" x-init="
                        const modal = new bootstrap.Modal($el.closest('.modal'));
                        $watch('user', value => {
                            if (value) {
                                modal.show();
                            }
                        });
                        
                         Reset user data when modal is hidden
                        $el.closest('.modal').addEventListener('hidden.bs.modal', () => {
                            this.user = null;
                        });
                    ">
                        <div class="modal-header">
                            <h5 class="modal-title">User Profile</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="text-center mb-4">
                                <div class="h-24 w-24 rounded-full bg-gray-200 flex items-center justify-center mx-auto mb-3 overflow-hidden">
                                    <template x-if="user && user.photo">
                                        <img :src="user.photo" :alt="user.name" class="h-full w-full object-cover" 
                                             @error="$el.style.display='none'; $el.nextElementSibling.style.display='flex';">
                                    </template>
                                    <div class="h-full w-full flex items-center justify-center text-2xl font-semibold text-white" 
                                         :class="user && user.name ? ['bg-blue-500', 'bg-green-500', 'bg-purple-500', 'bg-pink-500', 'bg-indigo-500'][user.name.charCodeAt(0) % 5] : 'bg-gray-500'"
                                         x-text="user && user.name ? user.name.split(' ').map(n => n[0]).join('').toUpperCase() : '?'"
                                         :style="{display: !user || !user.photo ? 'flex' : 'none'}">
                                    </div>
                                </div>
                                <h4 class="text-xl font-semibold text-gray-900" x-text="user ? user.name : 'Loading...'"></h4>
                                <p class="text-gray-500" x-text="user ? user.email : 'Loading...'"></p>
                                <div class="mt-2">
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium" 
                                          :class="{'bg-green-100 text-green-800': user && user.is_active, 'bg-red-100 text-red-800': user && !user.is_active}"
                                          x-text="user ? (user.is_active ? 'Active' : 'Inactive') : 'Loading...'">
                                    </span>
                                </div>
                            </div>
                            
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                                <div>
                                    <h5 class="text-sm font-medium text-gray-500">Role</h5>
                                    <p class="mt-1 text-sm text-gray-900" x-text="user ? user.role_name : 'Loading...'"></p>
                                </div>
                                <div>
                                    <h5 class="text-sm font-medium text-gray-500">Member Since</h5>
                                    <p class="mt-1 text-sm text-gray-900" x-text="user ? new Date(user.created_at).toLocaleDateString() : 'Loading...'"></p>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            
             Add User Modal 
            <div class="modal fade" id="addUserModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addUserModalLabel">Add New User</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="addUserForm" class="space-y-6" @submit.prevent="submitAddUserForm($event)" x-data="userManagement">
                                <div class="mb-3">
                                    <label for="name" class="form-label">Full Name</label>
                                    <input type="text" class="form-control" id="name" name="name" required>
                                </div>
                                <div class="mb-3">
                                    <label for="email" class="form-label">Email address</label>
                                    <input type="email" class="form-control" id="email" name="email" required>
                                </div>
                                <div class="mb-3">
                                    <label for="password" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="password" name="password" autocomplete="new-password">
                                    <div class="form-text">Leave blank to keep current password</div>
                                </div>
                                <div class="mb-3">
                                    <label for="role_id" class="form-label">Role</label>
                                    <select class="form-select" id="role_id" name="role_id" required>
                                        <% roles.forEach(role => { %>
                                            <option value="<%= role.id %>"><%= role.name %></option>
                                        <% }); %>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="photo" class="form-label">Profile Photo</label>
                                    <input class="form-control" type="file" id="photo" name="photo" accept="image">
                                </div>
                                <div class="form-check form-switch mb-3">
                                    <input class="form-check-input" type="checkbox" id="is_active" name="is_active" checked>
                                    <label class="form-check-label" for="is_active">Active</label>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary" form="addUserForm">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="modal fade" id="deleteUserModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Confirm Delete</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to delete user <span id="deleteUserName" class="fw-bold"></span>? This action cannot be undone.</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete User</button>
                        </div>
                    </div>
                </div>
            </div>
            
            <script>
                
                function showAlert(type, message) {
                    const alertDiv = document.createElement('div');
                    alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
                    alertDiv.role = 'alert';
                    alertDiv.innerHTML = `
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    `;
                    
                    const container = document.querySelector('main');
                    if (container) {
                        container.insertBefore(alertDiv, container.firstChild);
                        
                        setTimeout(() => {
                            if (alertDiv) {
                                const bsAlert = new bootstrap.Alert(alertDiv);
                                bsAlert.close();
                            }
                        }, 5000);
                    }
                }

                document.addEventListener('alpine:init', () => {
                    Alpine.data('userManagement', () => ({
                        user: null,
                        async viewUser(user) {
                            try {
                                this.user = { 
                                    name: 'Loading...', 
                                    email: 'Loading...',
                                    photo: null,
                                    role_name: 'Loading...',
                                    is_active: true,
                                    created_at: new Date().toISOString()
                                };
                                
                                const response = await fetch(`/admin/users/${user.id}`);
                                const data = await response.json();
                                
                                if (data.success) {
                                    this.user = {
                                        ...data.user,
                                        photo: data.user.photo ? `/uploads/${data.user.photo}` : null,
                                        created_at: new Date(data.user.created_at).toLocaleDateString('en-US', {
                                            year: 'numeric',
                                            month: 'long',
                                            day: 'numeric'
                                        })
                                    };
                                    
                                    console.log('User data loaded:', this.user);
                                } else {
                                    throw new Error(data.message || 'Failed to load user data');
                                }
                            } catch (error) {
                                console.error('Error:', error);
                                showAlert('danger', error.message || 'An error occurred while loading user data');
                                this.user = null;
                            }
                        },
                        
                        showAddUserModal() {
                            const addUserModal = new bootstrap.Modal(document.getElementById('addUserModal'));
                            addUserModal.show();
                        },
                        
                        async submitAddUserForm(event) {
                            event.preventDefault();
                            const form = event.target;
                            const submitBtn = form.querySelector('button[type="submit"]');
                            const originalBtnText = submitBtn.innerHTML;
                            
                            try {
                                submitBtn.disabled = true;
                                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...';
                                
                                const formData = new FormData(form);
                                const response = await fetch('/admin/users', {
                                    method: 'POST',
                                    body: formData
                                });
                                
                                const data = await response.json();
                                
                                if (response.ok) {
                                    window.location.reload();
                                } else {
                                    throw new Error(data.message || 'Failed to add user');
                                }
                            } catch (error) {
                                console.error('Error:', error);
                                showAlert('danger', error.message || 'An error occurred while adding the user');
                            } finally {
                                submitBtn.disabled = false;
                                submitBtn.innerHTML = originalBtnText;
                            }
                        },
                        
                        async handleEditUser(userId) {
                            const editBtn = document.querySelector(`[data-user-id="${userId}"].edit-user`);
                            if (!editBtn) return;
                            
                            try {
                                const originalBtnText = editBtn.innerHTML;
                                editBtn.disabled = true;
                                editBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>';
                                
                                const response = await fetch(`/admin/users/${userId}`);
                                const data = await response.json();
                                
                                if (data.success) {
                                    const user = data.user;
                                    const form = document.getElementById('userForm');
                                    const modal = document.getElementById('userModal');
                                    const modalTitle = modal.querySelector('.modal-title');
                                    
                                    form.elements.name.value = user.name || '';
                                    form.elements.email.value = user.email || '';
                                    form.elements.role_id.value = user.role_id || '';
                                    form.elements.is_active.checked = user.is_active !== undefined ? user.is_active : true;
                                
                                    form.dataset.userId = user.id;
                                    modalTitle.textContent = 'Edit User';
                                    
                                    const bsModal = new bootstrap.Modal(modal);
                                    bsModal.show();
                                } else {
                                    throw new Error(data.message || 'Failed to load user data');
                                }
                            } catch (error) {
                                console.error('Error:', error);
                                showAlert('danger', error.message || 'An error occurred');
                            } finally {
                                if (editBtn) {
                                    editBtn.disabled = false;
                                    editBtn.innerHTML = '<i class="bi bi-pencil-fill"></i>';
                                }
                            }
                        },
                        
                        confirmDelete(userId, userName) {
                            const deleteModal = new bootstrap.Modal(document.getElementById('deleteUserModal'));
                            const deleteBtn = document.getElementById('confirmDeleteBtn');
                            
                            document.getElementById('deleteUserName').textContent = userName || 'this user';
                            
                            const handleDelete = async () => {
                                try {
                                    const response = await fetch(`/admin/users/${userId}`, {
                                        method: 'DELETE',
                                        headers: {
                                            'Content-Type': 'application/json',
                                            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
                                        }
                                    });
                                    
                                    const data = await response.json();
                                    
                                    if (data.success) {
                                        const row = document.querySelector(`tr[data-user-id="${userId}"]`);
                                        if (row) row.remove();
                                        showAlert('success', 'User deleted successfully');
                                    } else {
                                        throw new Error(data.message || 'Failed to delete user');
                                    }
                                } catch (error) {
                                    console.error('Error:', error);
                                    showAlert('danger', error.message || 'An error occurred while deleting the user');
                                } finally {
                                    deleteBtn.removeEventListener('click', handleDelete);
                                    deleteModal.hide();
                                }
                            };
                            
                            deleteBtn.addEventListener('click', handleDelete, { once: true });
                            
                            deleteModal.show();
                        },
                        
                        async toggleUserStatus(userId, isActive) {
                            try {
                                const response = await fetch(`/admin/users/${userId}/status`, {
                                    method: 'PUT',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.content || ''
                                    },
                                    body: JSON.stringify({ is_active: isActive })
                                });
                                
                                const data = await response.json();
                                
                                if (!data.success) {
                                    throw new Error(data.message || 'Failed to update user status');
                                }
                                
                                const statusBadge = document.querySelector(`tr[data-user-id="${userId}"] .status-badge`);
                                if (statusBadge) {
                                    statusBadge.textContent = isActive ? 'Active' : 'Inactive';
                                    statusBadge.className = `status-badge ${isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`;
                                }
                                
                                showAlert('success', `User ${isActive ? 'activated' : 'deactivated'} successfully`);
                            } catch (error) {
                                console.error('Error:', error);
                                showAlert('danger', error.message || 'An error occurred while updating user status');
                                
                                const toggle = document.querySelector(`input[type="checkbox"][data-user-id="${userId}"]`);
                                if (toggle) toggle.checked = !isActive;
                            }
                        }
                    }));
                });
                
                document.addEventListener('DOMContentLoaded', function() {
                    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                    tooltipTriggerList.map(function (tooltipTriggerEl) {
                        return new bootstrap.Tooltip(tooltipTriggerEl);
                    });
                });
            </script>
</body>
</html>
